{
  "name": "ardrone-browser-3d",
  "version": "0.1.1",
  "description": "3D display of the AR.Drone in a browser.",
  "main": "app.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:wiseman/ardrone-browser-3d.git"
  },
  "keywords": [
    "3D",
    "AR.Drone",
    "ardrone-webflight",
    "browser",
    "diy drone",
    "drone",
    "nodecopter",
    "parrot",
    "plugin",
    "three.js",
    "webflight"
  ],
  "dependencies": {
    "ar-drone": "0.0.5",
    "express": "3.0.x",
    "ejs": "~0.8.3",
    "socket.io": "~0.9.4",
    "dronestream": "~1.0.3"
  },
  "author": {
    "name": "John Wiseman",
    "email": "jjwiseman@gmail.com"
  },
  "contributors": [],
  "license": "MIT",
  "readme": "ardrone-browser-3d\n==================\n\nThis is an in-browser 3D model of an AR.Drone that shows telemetry\nlive using three.js.\n\nSee a demo at http://wiseman.github.io/ardrone-browser-3d/\n\n![Screenshot](https://raw.github.com/wiseman/ardrone-browser-3d/master/ardrone-browser-3d-screenshot.png \"Screenshot\")\n\n\n## Running\n\nTo run it with your drone, first do\n\n```\nnpm install\n```\n\nThen connect to your drone's wifi and start the app:\n\n```\nnode app.js\n```\n\nNow point your browser at http://localhost:3000/, pick up your drone\nand make it dance.\n\nAlternately, if you don't have a drone handy, you can press the \"Play\"\nbutton on the page and watch the playback of some telemetry data I\nrecorded with my drone.\n\n\n## Just a simple hack\n\nThis is just a simple, ugly hack:\n\n1. Take the [\"ar drone 2.0 bleu\" Sketchup\nmodel](http://sketchup.google.com/3dwarehouse/details?mid=fb442457163fcdbed04e3327b51cff5c)\nby tototech and tweak it a little.\n\n2. Start with eschnou's\n[ardrone-webflight](https://github.com/eschnou/ardrone-webflight) and\nmodify it a bit.  Really I just use it to get the navdata websocket,\nbut this entire project could be a plugin for `ardrone-webflight`.\n\n3. Create a subclass of `THREE.Object3D` that knows how to transform\nrotations from the AR.Drone frame of reference/coordinate system into\nthe three.js coordinate system:\n\n```javascript\nvar Drone = function(model) {\n  THREE.Object3D.call(this);\n  this.add(model);\n}\nDrone.prototype = Object.create(THREE.Object3D.prototype);\n\nvar PI180 = Math.PI / 180.0;\n\nDrone.prototype.updateState = function(navdata) {\n  var euler = navdata.demo.rotation;\n  var m = new THREE.Matrix4();\n  // I couldn't find documentation on the AR.Drone Euler angle order,\n  // but this seems to work.\n  m.makeRotationFromEuler(new THREE.Vector3(euler.roll * PI180,\n                                            euler.yaw * -PI180,\n                                            euler.pitch * PI180),\n                          'YZX');\n  this.matrix = m;\n  this.matrixAutoUpdate = false;\n  this.updateMatrixWorld(true);\n};\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/wiseman/ardrone-browser-3d/issues"
  },
  "homepage": "https://github.com/wiseman/ardrone-browser-3d",
  "_id": "ardrone-browser-3d@0.1.1",
  "_from": "ardrone-browser-3d@"
}
