{
  "name": "camera",
  "description": "Create readable streams from connected webcams",
  "version": "0.0.5",
  "homepage": "http://github.com/wearefractal/camera",
  "repository": {
    "type": "git",
    "url": "git://github.com/wearefractal/camera.git"
  },
  "author": {
    "name": "Fractal",
    "email": "contact@wearefractal.com",
    "url": "http://wearefractal.com/"
  },
  "main": "./index.js",
  "dependencies": {
    "coffee-script": "~1.7.1",
    "opencv": "~0.5.0",
    "event-stream": "~3.1.1"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha --compilers coffee:coffee-script/register"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/wearefractal/camera/raw/master/LICENSE"
    }
  ],
  "readme": "![status](https://secure.travis-ci.org/wearefractal/camera.png?branch=master)\n\n## Information\n\n<table>\n<tr> \n<td>Package</td><td>camera</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Create readable streams from connected webcams</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.4</td>\n</tr>\n</table>\n\n## Discontinued\n\nUse node-opencv's VideoStream\n\n## Dependencies\n\nThis library requires that you have OpenCV installed - go to the OpenCV site for instructions.\n\n## Usage\n\n#### createStream([camera idx])\n\nThe object returned from createStream is a full readable Stream - you can pause, resume, destroy, pipe, etc.\n\ncreateStream optionally takes a camera number and defaults to 0 for the main camera\n\nEach data event is a full image buffer from the camera - the framerate is variable on your CPU (should be an option in the future). Image buffers are PNGs. To convert the buffer to a base64 data uri (for the browser) just do ```\"data:image/png;base64,\" + buffer.toString('base64')```\n\n```coffee-script\ncamera = require 'camera'\n\nwebcam = camera.createStream()\n\nwebcam.on 'data', (buffer) ->\n  # do something with image buffer\n```\n\n#### snapshot(callback)\n\nReturns an error and one image buffer to the given callback.\n\n#### record(milliseconds, cb)\n\nReturns an array of video frames for the time-span specified in milliseconds\n\n\n## Examples\n\n\n#### Take a picture\n\n```coffee-script\nfs = require 'fs'\ncamera = require 'camera'\n\nwebcam = camera.createStream()\n\nwebcam.on 'error', (err) ->\n  console.log 'error reading data', err\n\nwebcam.on 'data', (buffer) ->\n  fs.writeFileSync 'cam.png', buffer\n  webcam.destroy()\n\nwebcam.snapshot (err, buffer) ->\n\nwebcam.record 1000, (buffers) ->\n  \n```\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2012 Fractal <contact@wearefractal.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/wearefractal/camera/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/wearefractal/camera/issues"
  },
  "_id": "camera@0.0.5",
  "dist": {
    "shasum": "3ee44db8cb5993f315fd108c1d39f4038910359e"
  },
  "_from": "camera@",
  "_resolved": "https://registry.npmjs.org/camera/-/camera-0.0.5.tgz"
}
